#! /usr/bin/perl

# Copyright (c) 2019 Marc Espie <espie@openbsd.org>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
# 
#
# look at the pics and show their size and aspect ratio

use strict;
use warnings;
use File::Find;
use FindBin;
use lib "$FindBin::Bin/../lib";
use Math::Farey;

my @dirs;
my @locations = (qw(pictures portrait landscape));


sub read_list
{
	open my $in, '<', "list" or return;

	my $data = {};
	while(<$in>) {
		if (my ($fullname, $width, $height) = m/^(.*)\s(\d+)x(\d+)\s/) {
			my $k = $fullname;
			for my $d (@locations) {
				if ($fullname =~ m,^\Q$d\E/(.*),) {
					$k = $1;
				}
			}
			$data->{$k} = {name => $fullname, width => $width,
			    height => $height};
		} else {
			die "Incorrect line in list $_\n";
		}
	}
	return $data;
}

for my $i (@locations) {
	push(@dirs, $i) if -d $i;
}

if (@dirs == 0) {
	print STDERR "No valid directory\n";
	exit(1);
}
# first build the list of pics
my @list;
find(sub {
	return unless -f $_;
	push(@list, $File::Find::name);
    }, @dirs);

# let's get the old list
my $orig_width = read_list();

# then pass it off to whatever tool can do the deed
open(my $p, "-|", "gm", "identify", (sort @list)) or die;

open(my $out, ">", "list") or die;
open(my $V, ">", "portrait.list") or die;
open(my $H, ">", "landscape.list") or die;
while (<$p>) {
	chomp;
	if (m/^(.*?)(\[[0-9]+\])? JPEG ([0-9]+)x([0-9]+).*/) {
		my ($title, $h, $w) = ($1, $3, $4);
		my ($a, $b) = farey($h/ $w, 16);
		my $o;
		if ($a >= $b * 1.2) {
			$o = $H;
		} elsif ($a*1.2 <= $b) {
			$o = $V;
		} else {
			$o = $H;
		}
		print $o $title, "\n";
		print $out $title, " ", $h, "x", $w, " ", $a, ":", $b, "\n";
	} else {
		print STDERR "Bad line #$. from pipe: $_\n";
	}
}
close($out);
close($V);
close($H);
close($p);
if (defined $orig_width) {
	my $new_width = read_list();
	while (my ($k, $w) = each %$orig_width) {
		print "$k => ", $w->{width}, " ", $new_width->{$k}{width}, "\n";
	}
	for my $r (glob('aspect-*')) {
	#	rescale($r, $orig_width, $new_width);
	}
}
